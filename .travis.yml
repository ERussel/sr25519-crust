sudo: true

language: cpp

git:
  depth: 1

branches:
  except:
    - /^feature.*/

env:
  global:
    - CTEST_OUTPUT_ON_FAILURE=1

cache:
  apt: true
  ccache: true
  directories:
    - "$HOME/.ccache"
    - "$HOME/.cargo"
    - "$HOME/Library/Caches/Homebrew"

matrix:
  include:
    - os: osx
      name: "OSX gcc"
      osx_image: xcode10.1
      compiler: gcc
      before_cache:
        - brew cleanup
      env:
        - _CC=gcc
        - _CXX=g++
      addons:
        homebrew:
          packages:
            - git

    - os: osx
      name: "OSX clang"
      osx_image: xcode10.1
      compiler: clang
      before_cache:
        - brew cleanup
      env:
        - _CC=clang
        - _CXX=clang++
      addons:
        homebrew:
          packages:
            - git


    - os: linux
      name: "Linux gcc8"
      dist: xenial
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
            - git
            - python3
            - python3-pip
            - python3-setuptools
      env:
        - _CC=gcc-8
        - _CXX=g++-8



    - os: linux
      name: "Linux clang-8"
      dist: xenial
      compiler: clang
      before_cache:
        - brew cleanup
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-8
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - clang-8
            - git
            - python3
            - python3-pip
            - python3-setuptools
      env:
        - _CC=clang-8
        - _CXX=clang++-8

install:
  - |
    # install python pip3 deps
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
        pyenv global 3.6
      elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
        pip3 install --user pyyaml
      fi
    pip3 install --user --upgrade requests gitpython cmake gcovr

before_script:
  - cmake --version
  - python -V
  - python3 -V
  - pip -V
  - pip3 -V
  - gcovr --version || true

script:
  - export CC=${_CC}
  - export CXX=${_CXX}
  - export PATH="$HOME/.cargo/bin:$PATH"
  - curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly
  - rustup install nightly
  - rustup default nightly
  - cargo install --force cbindgen
  - cmake . -Bbuild
  - cmake --build build -- -j2
  - cmake --build build --target test
